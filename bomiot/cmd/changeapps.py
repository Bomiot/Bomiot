import os

def create_project_apps_py(path, app, name):
    with open(path, "w") as f:
        f.write("import os\n")
        f.write("from django.apps import AppConfig\n")
        f.write("\n")
        f.write(f"class {name.capitalize()}Config(AppConfig):\n")
        f.write(f"    name = '{app}.{name}'\n")
        f.write("\n")
        f.write("    def ready(self):\n")
        f.write("        from bomiot.server.core.signal import bomiot_signals\n")
        f.write("        # workers = int(os.environ.get('WORKERS', 0))\n")
        f.write("        # if workers > 0:\n")
        f.write("        #     from bomiot.server.core.models import UvicornProcess\n")
        f.write("        #     process_workders = UvicornProcess.objects.filter().count()\n")
        f.write("        #     if process_workders == workers:\n")
        f.write("        #     # models is JobList will run one schedule job\n")
        f.write("        #         bomiot_signals.send(sender=example_schedule_job, msg={\n")
        f.write('        #             "models": "JobList",\n')
        f.write('        #             "data": {\n')
        f.write('        #                 "trigger": "interval",\n')
        f.write('        #                 "seconds": 10\n')
        f.write("        #             }\n")
        f.write("        #         })\n")
        f.write("\n")
        f.write("        #     # models is Function will run job once\n")
        f.write("        #         bomiot_signals.send(sender=example_job, msg={\n")
        f.write('        #              "models": "Function",\n')
        f.write("        #         })\n")
        f.write("\n")
        f.write("# Schedule Job\n")
        f.write("ARGS_MAP = {\n")
        f.write("    'cron': ['year', 'month', 'day', 'week', 'day_of_week', 'hour', 'minute', 'second', 'start_date', 'end_date','timezone'],\n")
        f.write("    'interval': ['weeks', 'days', 'hours', 'minutes', 'seconds', 'start_date', 'end_date', 'timezone'],\n")
        f.write("    'date': ['run_date', 'timezone']\n")
        f.write("}\n")
        f.write("def example_job():\n")
        f.write('    print("This is an example job.")\n')
        f.write("\n")
        f.write("def example_schedule_job():\n")
        f.write('    print("This is an example schedule job.")\n')
        f.write("\n")
    f.close()


def create_plugins_apps_py(path, name):
    with open(path, "w") as f:
        f.write("import os\n")
        f.write("from django.apps import AppConfig\n")
        f.write("\n")
        f.write(f"class {name.capitalize()}Config(AppConfig):\n")
        f.write(f"    name = '{name}'\n")
        f.write("\n")
        f.write("    def ready(self):\n")
        f.write("        from bomiot.server.core.signal import bomiot_signals\n")
        f.write("        # workers = int(os.environ.get('WORKERS', 0))\n")
        f.write("        # if workers > 0:\n")
        f.write("        #     from bomiot.server.core.models import UvicornProcess\n")
        f.write("        #     process_workders = UvicornProcess.objects.filter().count()\n")
        f.write("        #     if process_workders == workers:\n")
        f.write("        #     # models is JobList will run one schedule job\n")
        f.write("        #         bomiot_signals.send(sender=example_schedule_job, msg={\n")
        f.write('        #             "models": "JobList",\n')
        f.write('        #             "data": {\n')
        f.write('        #                 "trigger": "interval",\n')
        f.write('        #                 "seconds": 10\n')
        f.write("        #             }\n")
        f.write("        #         })\n")
        f.write("\n")
        f.write("        #     # models is Function will run job once\n")
        f.write("        #         bomiot_signals.send(sender=example_job, msg={\n")
        f.write('        #              "models": "Function",\n')
        f.write("        #         })\n")
        f.write("\n")
        f.write("# Schedule Job\n")
        f.write("ARGS_MAP = {\n")
        f.write("    'cron': ['year', 'month', 'day', 'week', 'day_of_week', 'hour', 'minute', 'second', 'start_date', 'end_date','timezone'],\n")
        f.write("    'interval': ['weeks', 'days', 'hours', 'minutes', 'seconds', 'start_date', 'end_date', 'timezone'],\n")
        f.write("    'date': ['run_date', 'timezone']\n")
        f.write("}\n")
        f.write("def example_job():\n")
        f.write('    print("This is an example job.")\n')
        f.write("\n")
        f.write("def example_schedule_job():\n")
        f.write('    print("This is an example schedule job.")\n')
        f.write("\n")
    f.close()