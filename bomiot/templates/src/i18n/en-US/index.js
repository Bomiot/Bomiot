// This is just an example,
// so you can safely delete all default props below

export default {
  failed: 'Action failed',
  success: 'Action was successful',
  title: 'GreaterWMS Open Source Warehouse Management System',
  description: 'GreaterWMS Open Source Warehouse Management System',
  keywords: 'greaterwms, 聚商汇wms,wms-system,open source wms system,开源wms,开源仓库管理软件,warehouse management system, free wms',
  expireNotice: `The authorization key will expire in {days} days. Please use 'bomiot keys' to retrieve a new authorization key`,
  expired: "The authorization key has expired. Please use 'bomiot keys' to retrieve a new authorization key",
  gohome: 'Go Home',
  cancel: 'Cancel',
  submit: 'Submit',
  login: 'Login',
  register: 'Register',
  passworderror: 'Password Is Not The Same',
  logout: 'Logout',
  logoutnotice: 'Welcome Back Again',
  username: 'User Name',
  password: 'Enter Password',
  password1: 'Enter Password',
  password2: 'Enter Password Again',
  usererror: 'User Name Or Password Cannot Be Empty',
  nodata: 'No more data',
  total: 'Total: ',
  page: 'page',
  per_page: 'Per page lines',
  refresh: 'Refresh',
  refreshdata: 'Refresh Data',
  new: 'New',
  edit: 'Edit Data',
  delete: 'Delete Data',
  newUser: 'New one user',
  createuser: 'Please input your username, default password is your username',
  changepassword: 'Change Password',
  changePWD: 'What is your new password? (Minimum 3 characters)',
  sucesschangepwd: 'Success change password',
  setteam: 'Set Team',
  chooseteam: 'Choose the team for this user',
  setdepartment: 'Set Department',
  choosedepartment: 'Choose the department for this user',
  isactive: 'Active',
  isnotactive: 'Not Active',
  deleteuser: 'Delete User',
  email: 'E-Mail',
  date_joined: 'Date Joined',
  last_login: 'Last Login',
  created_time: 'Created Time',
  updated_time: 'Updated Time',
  action: 'Action',
  confirmnotice: 'Delete data can not revert, please confirm you want to delete it!!!',
  contents: 'Contents',
  copySuccess: 'Copy Success',
  menuTab: {
    standard: 'Standard',
    server: 'Server',
  },
  menuLink: {
    home: 'Home',
    user: 'User List',
    team: 'Team List',
    department: 'Department',
    example: 'Example',
  },
  upload: {
    center: 'Upload Center',
    clear: 'Clear All',
    remove: 'Remove Uploaded Files',
    choose: 'Choose your files and upload to server',
    add: 'Add files',
    server: 'Upload to server',
    abort: 'Abort upload',
    delete: 'Delete this file',
    status: 'Status: ',
    idle: 'Idle',
    failed: 'Failed',
    uploaded: 'Uploaded'
  },
  doc: {
    center: 'Doc Center',
    name: 'Documents',
    type: 'Type',
    size: 'Size',
    owner: 'Owner',
    share : 'Share',
    shared_to: 'Choose user you want to share to',
    delete: 'Delete this file',
    download: 'Download file',
    deletefile: 'Delete one file',
    deletefilenotice: 'Confirm it you want to delete this file',
    uploaded: 'Uploaded'
  },
  department: {
    new: 'New Department',
    create: 'Please input department name',
    change: 'Change Department Name',
    confirmchange: 'Change department name will affect all users in this department',
    delete: 'Delete Department',
    name: 'Department Name'
  },
  team: {
    new: 'New Team',
    create: 'Please input team name',
    change: 'Change Team Name',
    changeteam: 'Change team name will affect all users in this team',
    permission: 'Set Permission',
    choosepermission: 'Choose the permission for this team',
    delete: 'Delete Team',
    name: 'Team Name',
  },
  pypi: {
    category: 'Category',
    downloads: 'Downloads',
    percent: 'Percent',
    date: 'Date',
  },
  pid: {
    pid: 'PID',
    name: 'Name',
    memory: 'Memory',
    memory_usage: 'Memory Usage',
    cpu_usage: 'CPU Usage',
  },
  cpu: {
    cpu_frequency: 'CPU Current Frequency',
    min_cpu_frequency: 'Minimum Frequency',
    max_cpu_frequency: 'Maximum Frequency',
    physical_cores: 'Physical Cores',
    logical_cores: 'Logical Cores',
    cpu_usage: 'CPU Usage',
  },
  memory: {
    total: 'Total Memory',
    used: 'Used Memory',
    free: 'Free Memory',
    percent: 'Memory Usage',
    swap_total: 'Total Swap Space',
    swap_used: 'Used Swap Space',
    swap_free: 'Free Swap Space',
    swap_percent: 'Swap Usage',
  },
  disk: {
    device: 'Device',
    mountpoint: 'Mount Point',
    total: 'Total',
    used: 'Used',
    free: 'Free',
    percent: 'Disk Usage',
  },
  network: {
    bytes_sent: 'Bytes Sent',
    bytes_recv: 'Bytes Received',
  },
  example: {
    create: 'Create Data',
    update: 'Edit Data',
    delete: 'Delete Data',
    value: 'value',
    status: 'status',
    description: 'description',
    error: 'Data must be more than 1 character',
  },
  400: 'Bad request (400)',
  401: 'Authorization not obtained (401)',
  403: 'Access denied (403)',
  404: 'Resource does not exist (404)',
  405: 'The function is disabled (405)',
  408: 'Request timed out (408)',
  409: 'Data conflict (409)',
  410: 'Data has been deleted (410)',
  500: 'Server error (500)',
  501: 'Service not implemented (501)',
  502: 'Network error (502)',
  503: 'Service unavailable (503)',
  504: 'Network timeout (504)',
  505: 'HTTP version is not supported (505)'
}
