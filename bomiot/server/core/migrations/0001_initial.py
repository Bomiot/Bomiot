# Generated by Django 4.2.19 on 2025-04-16 06:44

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=False, verbose_name='Delete Label')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Update Time')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='File Name')),
                ('type', models.CharField(blank=True, default='', max_length=255, verbose_name='Type')),
                ('size', models.CharField(blank=True, default='', max_length=255, verbose_name='Size')),
                ('owner', models.CharField(default='', max_length=255, verbose_name='Owner')),
                ('shared_to', models.CharField(default='', max_length=255, verbose_name='Shared To')),
            ],
            options={
                'verbose_name': 'bomiot Files',
                'verbose_name_plural': 'bomiot Files',
                'db_table': 'bomiot_files',
                'ordering': ['-updated_time'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JobList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=False, verbose_name='Delete Label')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Update Time')),
                ('job_id', models.CharField(max_length=255, verbose_name='Job ID')),
                ('module_name', models.CharField(max_length=255, verbose_name='Module Name')),
                ('func_name', models.CharField(max_length=255, verbose_name='Function Name')),
                ('trigger', models.CharField(max_length=255, verbose_name='Trigger')),
                ('description', models.TextField(blank=True, default='', null=True, verbose_name='Description')),
                ('configuration', models.TextField(null=True, verbose_name='Configuration')),
                ('type', models.BooleanField(default=True, verbose_name='Type')),
            ],
            options={
                'verbose_name': 'bomiot Job',
                'verbose_name_plural': 'bomiot Job',
                'db_table': 'bomiot_job',
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=False, verbose_name='Delete Label')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Update Time')),
                ('sender', models.CharField(blank=True, default='', max_length=255, verbose_name='Sender')),
                ('receiver', models.CharField(blank=True, default='', max_length=255, verbose_name='Receiver')),
                ('detail', models.CharField(default='', max_length=255, verbose_name='Detail')),
                ('can_send', models.BooleanField(default=False, verbose_name='Can Send')),
            ],
            options={
                'verbose_name': 'bomiot Message',
                'verbose_name_plural': 'bomiot Message',
                'db_table': 'bomiot_message',
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=False, verbose_name='Delete Label')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Update Time')),
                ('api', models.CharField(max_length=255, verbose_name='Permission API')),
                ('name', models.CharField(max_length=255, verbose_name='Permission Name')),
            ],
            options={
                'verbose_name': 'bomiot Permission',
                'verbose_name_plural': 'bomiot Permission',
                'db_table': 'bomiot_permission',
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThrottleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=False, verbose_name='Delete Label')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Create Time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Update Time')),
                ('ip', models.CharField(max_length=255, verbose_name='IP')),
                ('method', models.CharField(max_length=18, verbose_name='Method')),
            ],
            options={
                'verbose_name': 'bomiot Throttle',
                'verbose_name_plural': 'bomiot Throttle',
                'db_table': 'bomiot_throttle',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('type', models.IntegerField(default=1, verbose_name='User Type')),
                ('phone', models.CharField(blank=True, default='', max_length=255, verbose_name='Phone')),
                ('permission', models.JSONField(default=dict, null=True, verbose_name='Permission')),
                ('request_limit', models.IntegerField(default=0, verbose_name='Request Limit')),
                ('is_delete', models.BooleanField(default=False, verbose_name='Delete Label')),
                ('approve_level', models.IntegerField(default=0, verbose_name='Approve Level')),
                ('openid', models.CharField(blank=True, default='', max_length=255, verbose_name='OpenID')),
                ('appid', models.CharField(blank=True, default='', max_length=255, verbose_name='AppID')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created Time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated Time')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'bomiot User',
                'verbose_name_plural': 'bomiot User',
                'db_table': 'bomiot_user',
                'ordering': ['-id'],
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
